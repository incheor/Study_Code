# -*- coding: utf-8 -*-
"""4.머신러닝_최적화_파이프라인_구축_교차검증.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Nr4hGy_A8lAnz5MB0BYm1-s0f6645Lyt

# 머신러닝 절차

1. 알고리즘 선정
2. 데이터 준비 : 학습용, 검증용
3. 학습
4. 예측
5. 성능평가 : 분류, 회귀
6. **최적화** <-- 여기함
7. 모델 덤프

## 최적화

- 목표
  - 분류 : 정확도를 목표치까지 올리기
  - 회귀 : 손실값을 목표치까지 내리기
- 방법
  - 데이터가 부족하면 **추가 확보**하기
  - **하이퍼 파라미터 튜닝** : 개별 알고리즘의 파라미터 값의 최적 조합 찾기
  - **파이프라인 구축** : 데이터 전처리부터 학습까지 파이프라인 구축하여 전개되게 구성하기
  - n개 알고리즘 조합으로 구성 : 앙상블 기법과 유사함
- 데이터 검증 폴드(fold) 이해 및 구성

## 샘플 프로젝트 준비

- 정확도가 낮은 훈련 과정 준비
- 프로젝트 초기의 프로토타입

### 알고리즘 선정 : SVC
"""

from sklearn.svm import SVC

clf = SVC()

"""### 데이터 준비(학습, 검증)"""

# 데이터 세트 라이브러리
from sklearn.datasets import load_breast_cancer
# 학습, 검증 데이터 분리 라이브러리
from sklearn.model_selection import train_test_split

cancer = load_breast_cancer()
print(cancer.DESCR)

# 독립변수 모양, 종속변수 모양, 종속변수 종류
cancer.data.shape, cancer.target.shape, cancer.target_names

# 데이터 프레임으로 만들기
import pandas as pd
X = pd.DataFrame(cancer.data)
X.columns = cancer.feature_names
y = pd.DataFrame(cancer.target)

# 학습용, 검증용 데이터를 75:25로 나눠서 X_train, X_test, ... 형태로 생성
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.75, random_state = 0)
X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""### 학습"""

clf.fit(X_train, y_train)

"""### 예측"""

y_pred = clf.predict(X_test)

"""### 성능평가"""

from sklearn.metrics import accuracy_score

# 이거는 예측을 먼저 하고 그 예측값과 실제 값을 넣어서 점수를 냄
accuracy_score(y_test, y_pred)

# 이거는 예측과 점수를 바로 수행
clf.score(X_test, y_test)

"""### 최적화(생략)

### 덤프(생략)

## 하이퍼 파라미터 튜닝

## 파이프라인 구축
"""