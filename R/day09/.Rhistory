aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
new_tbc
####### 결핵 환자 수
## 지역별 결핵 환자 수
new_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
## 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(name, code, NewPts)
tbc_code
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
group_by(code,name) %>%
summarise(NewPts_15 = sum(NewPts)) %>%
arrange(code)
tbc_code
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(name, code, NewPts) %>%
arrange(code)
tbc_code
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code,name, NewPts) %>%
arrange(code)
tbc_code
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
group_by(code,name) %>%
summarise(NewPts_15 = sum(NewPts)) %>%
arrange(code)
tbc_code
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code, name, NewPts) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
tbc_code
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
library(kormaps2014)
library(dplyr)
library(ggiraphExtra)
library(plotly)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
str(changeCode(korpop1))
tbc$name <- iconv(tbc$name, "UTF-8","CP949")
str(changeCode(tbc))
####### 지역별 인구 수
korpop1
str(changeCode(korpop1))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
####### 지역별 가구 수 분석
korpop1
str(changeCode(korpop1))
# 변수명 변경
korpop1 <- rename(korpop1,
household = 가구_계_가구)
# 그래프로 만들기
ggplot(data = korpop1, aes(x = reorder(name, -household), y = household)) +
geom_col()
####### 지역별 가구당 평균 구성인원 수
korpop1 <- korpop1 %>%
mutate(mean_pop = pop / household)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -mean_pop), y = mean_pop)) +
geom_col() +
ylim(0, 5)
####### 지역별 남녀 성비
korpop1<- rename(korpop1,
male = 남자_명,
female = 여자_명)
korpop1 <- korpop1 %>%
mutate(sex_ratio = male / female * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 지역별 외국인 비율
korpop1 <- rename(korpop1,
foreigner = 외국인_계_명)
korpop1$foreigner <- as.numeric(korpop1$foreigner)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
ggChoropleth(data = korpop1,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 결핵 환자 수
## 지역별 결핵 환자 수
new_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
## 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code, name, NewPts) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
tbc_code
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
####### 조인 사용해보기
korpop1
# 준비
library(tibble)
library(ggplot2)
library(kormaps2014)
library(dplyr)
library(ggiraphExtra)
library(plotly)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
str(changeCode(korpop1))
tbc$name <- iconv(tbc$name, "UTF-8","CP949")
str(changeCode(tbc))
####### 지역별 인구 수
korpop1
str(changeCode(korpop1))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
####### 지역별 가구 수 분석
korpop1
str(changeCode(korpop1))
# 변수명 변경
korpop1 <- rename(korpop1,
household = 가구_계_가구)
# 그래프로 만들기
ggplot(data = korpop1, aes(x = reorder(name, -household), y = household)) +
geom_col()
####### 지역별 가구당 평균 구성인원 수
korpop1 <- korpop1 %>%
mutate(mean_pop = pop / household)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -mean_pop), y = mean_pop)) +
geom_col() +
ylim(0, 5)
####### 지역별 남녀 성비
korpop1<- rename(korpop1,
male = 남자_명,
female = 여자_명)
korpop1 <- korpop1 %>%
mutate(sex_ratio = male / female * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 지역별 외국인 비율
korpop1 <- rename(korpop1,
foreigner = 외국인_계_명)
korpop1$foreigner <- as.numeric(korpop1$foreigner)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
ggChoropleth(data = korpop1,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 결핵 환자 수
## 지역별 결핵 환자 수
new_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
## 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자만 추출
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code, name, NewPts) %>%
arrange(code)
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자만 추출
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code, name, NewPts) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
tbc_code
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
# 준비
library(tibble)
library(ggplot2)
library(kormaps2014)
library(dplyr)
library(ggiraphExtra)
library(plotly)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
str(changeCode(korpop1))
tbc$name <- iconv(tbc$name, "UTF-8","CP949")
str(changeCode(tbc))
####### 지역별 인구 수
korpop1
str(changeCode(korpop1))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
####### 지역별 가구 수 분석
korpop1
str(changeCode(korpop1))
# 변수명 변경
korpop1 <- rename(korpop1,
household = 가구_계_가구)
# 그래프로 만들기
ggplot(data = korpop1, aes(x = reorder(name, -household), y = household)) +
geom_col()
####### 지역별 가구당 평균 구성인원 수
korpop1 <- korpop1 %>%
mutate(mean_pop = pop / household)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -mean_pop), y = mean_pop)) +
geom_col() +
ylim(0, 5)
####### 지역별 남녀 성비
korpop1<- rename(korpop1,
male = 남자_명,
female = 여자_명)
korpop1 <- korpop1 %>%
mutate(sex_ratio = male / female * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 지역별 외국인 비율
korpop1 <- rename(korpop1,
foreigner = 외국인_계_명)
korpop1$foreigner <- as.numeric(korpop1$foreigner)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
ggChoropleth(data = korpop1,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 결핵 환자 수
## 지역별 결핵 환자 수
new_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
## 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자만 추출
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
select(code, NewPts) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
tbc_code
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPts_15 / household * 100)
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPts / household * 100)
ggplot(data = korpop1, aes(x = reorder(name.x, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
korpop1
ggplot(data = korpop1, aes(x = reorder(name.x, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggChoropleth(data = korpop1,
aes(fill = household_NewPts,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.5)
ggChoropleth(data = korpop1,
aes(fill = household_NewPts,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.5)
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
select(code, name, year)
tbc_sb
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
group_by(name, year) %>%
summarise(sum_Newpts = sum(NewPts))
tbc_sb
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
group_by(code, name, year) %>%
summarise(sum_Newpts = sum(NewPts))
tbc_sb
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
select(code, name, year, NewPts)
tbc_sb
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
select(code, name, year, NewPts) %>%
arrange(code)
tbc_sb
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
group_by(code, name, year) %>%
summarise(sum_Newpts = sum(NewPts))
tbc_sb
## 연도별 서울과 부산의 환자 수 비교
tbc
tbc_sb <- tbc %>%
filter(!is.na(NewPts) & name %in% c('서울특별시', '부산광역시')) %>%
select(code, name, year, NewPts) %>%
arrange(code)
tbc_sb
ggplot(data = tbc_sb, aes(x = year, y = sum_Newpts, fill = name)) +
geom_col()
ggplot(data = tbc_sb, aes(x = year, y = NewPts, fill = name)) +
geom_col()
ggplot(data = tbc_sb, aes(x = year, y = NewPts, fill = name)) +
geom_col(position = 'dodge')
ggplot(data = tbc_sb, aes(x = year, y = NewPts, group = 1)) +
geom_line()
ggplot(data = tbc_sb, aes(x = year, y = NewPts, group = name)) +
geom_line()
ggplot(data = tbc_sb, aes(x = year, y = NewPts)) +
geom_line()
ggplot(data = tbc_sb, aes(x = name, y = NewPts)) +
geom_line()
ggplot(data = tbc_sb, aes(x = name, y = year)) +
geom_line()
ggplot(data = tbc_sb, aes(x = year, y = NewPts, fill = name)) +
geom_col()
ggplot(data = tbc_sb, aes(x = year, y = NewPts, fill = name)) +
geom_col(position = 'dodge')
getwd()
library(XML)
# 승인받은 인증키 설정
service_key <- 'nDqa2ug4uPizctwIytKqxYAE5uMtyH0HD4y0vu4ZFXMZYvRABkjqBbJlMQWJG%2Fgug3hwTZkP2UFI1S1zqwbm2w%3D%3D'
# 웹 사이트 URL 설정
api_url <- 'http://apis.data.go.kr/B552584/EvCharger/getChargerInfo'
# 요청변수 등록
# mOfRows = '1000'
zcode = '26'
# 요청변수 등록
# 부산 지역 코드
zcode = '26'
# URL 주소를 공백없이 모두 묶기
open_api_url <- paste0(api_url, "?serviceKey=", service_key,
"&zcode=", zcode)
open_api_url
# 오픈 API로 자료 요청하기
# XML 형식으로 자료 가져오기
raw.data <- xmlTreeParse(open_api_url,
useInternalNodes = TRUE,
encoding = 'utf-8')
raw.data
# XML형식에서 데이터 프레임 형식으로 변환
# </item> 태그별로 데이터를 구분해주기
EV_charging_station <- xmlToDataFrame(getNodeSet(raw.data, " //item"))
EV_charging_station
View(EV_charging_station)
# 사용할 필드 분리
EV_charging_station <- subset(EV_charging_station,
select = c(statNm,
addr,
lat,
lng,
useTime))
View(EV_charging_station)
bs_ECS <- read.csv('C:/Souuces/StudyR/Data/EV_charging_station_new.csv', header = T)
table(bs_ECS$useTime)
table(is.na(bs_ECS))
library(dplyr)
library(ggplot2)
# 부산의 시간대 별 충전소 현황
ggplot(data = bs_ECS, aes(x = useTime)) +
geom_bar()
bs_ECS$addr
bs_ECS$addr <- substr(bs_ECS$addr, start = 6, stop = 9)
bs_ECS_new <- bs_ECS %>%
filter(bs_ECS$addr == '24시간 이용가능')
# 부산시 구 별 24시간 이용 가능한 전기차 충전소 갯수 현황
ggplot(data = bs_ECS_new, aes(x = bs_ECS$addr)) +
geom_bar()
table(bs_ECS$useTime)
table(is.na(bs_ECS))
ggplot(data = bs_ECS, aes(x = useTime)) +
geom_bar()
# 부산시 구 별 24시간 이용 가능한 전기차 충전소 갯수 현황
bs_ECS$addr
ggplot(data = bs_ECS_new, aes(x = bs_ECS$addr)) +
geom_bar()
