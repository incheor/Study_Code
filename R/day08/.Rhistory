group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
# 연도별 합계
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
new_tbc
ggplot(data = new2_tbc, aes(x = reorder(year, -sum_NewPts), y = sum_NewPts)) +
geom_col()
ggplot(data = new2_tbc, aes(x = reorder(year, -sum_NewPts), y = sum_NewPts)) +
geom_line()
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts)) +
geom_line()
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts)) +
geom_line()
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts)) + geom_line()
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
# NA가 있는지 확인
table(is.na(korpop1$household))
####### 조인 사용해보기
korpop1
tbc
tbc_code <- tbc %>%
group_by(code, name)
tbc_code
tbc_code <- tbc %>%
group_by(code, name) %>%
arrange(code)
tbc_code
tbc_code <- tbc %>%
group_by(code, name) %>%
summarise(sum_NewPts = sum(NewPts))
tbc_code
tbc_code <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(code, name) %>%
summarise(sum_NewPts = sum(NewPts))
tbc_code
tbc_code <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(code, name) %>%
summarise(sum_NewPts = sum(NewPts)) %>%
arrange(code)
tbc_code
# 지역별
tbc_code <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(code) %>%
summarise(sum_NewPts = sum(NewPts)) %>%
arrange(code)
tbc_code
# 지역별
tbc_code <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(code,name) %>%
summarise(sum_NewPts = sum(NewPts)) %>%
arrange(code)
tbc_code
new_tbc
tbc_code
tbc_code
total <- left_join(korpop1, tbc_code, by = 'code')
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
tbc_code$code <- as.character(tbc_code$code)
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
source("C:/Souuces/StudyR/day08/day8_map_visualization.R", encoding = 'UTF-8', echo=TRUE)
# left_join
## 성별 결핵 환자 수
korpop1_sex_NewPts <- korpop1 %>%
select(male, female, NewPct)
# left_join
## 성별 결핵 환자 수
korpop1_sex_NewPts <- korpop1 %>%
select(male, female, NewPts)
# left_join
## 성별 결핵 환자 수
korpop1_sex_NewPts <- korpop1 %>%
select(male, female, sum_NewPts)
korpop1_sex_NewPts
# 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
# 15년도의 지역별 결핵환자 합계
tbc_code <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(code,name) %>%
summarise(sum_NewPts = sum(NewPts)) %>%
arrange(code)
tbc_code$code <- as.character(tbc_code$code)
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
tbc_code
# 15년도의 지역별 결핵환자 합계
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 15) %>%
group_by(code,name) %>%
summarise(sum_15NewPts = sum(NewPts)) %>%
arrange(code)
tbc
# 15년도의 지역별 결핵환자 합계
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
group_by(code,name) %>%
summarise(sum_15NewPts = sum(NewPts)) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
## 성별 결핵 환자 수
korpop1_sex_NewPts <- korpop1 %>%
select(male, female, sum_15NewPts)
korpop1_sex_NewPts
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
group_by(code,name) %>%
summarise(NewPts_15 = sum(NewPts)) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
## 성별 결핵 환자 수
korpop1_sex_NewPts <- korpop1 %>%
select(male, female, NewPts_15)
korpop1_sex_NewPts
####### 조인 사용해보기
korpop1
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPtx / household * 100)
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPts / household * 100)
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPts_15 / household * 100)
korpop1
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col()
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.5)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
install.packages('ggiraphExtra')
library(ggiraphExtra)
library(tibble)
library(ggplot2)
install.packages('stringi')
install.packages('dectools')
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
library(dplyr)
install.packages("stringi")
install.packages('dectools')
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
library(dplyr)
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
library(kormaps2014)
library(dplyr)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
install.packages('ggiraphExtra')
library(ggiraphExtra)
library(tibble)
library(ggplot2)
install.packages('stringi')
install.packages('dectools')
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
library(dplyr)
install.packages("ggiraphExtra")
install.packages("stringi")
install.packages("stringi")
install.packages('dectools')
library(kormaps2014)
library(dplyr)
library(kormaps2014)
library(kormaps2014)
library(dplyr)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
str(changeCode(korpop1))
tbc$name <- iconv(tbc$name, "UTF-8","CP949")
str(changeCode(tbc))
####### 지역별 인구 수
korpop1
str(changeCode(korpop1))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
str(changeCode(korpop1))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
####### 지역별 가구 수 분석
korpop1
str(changeCode(korpop1))
# 변수명 변경
korpop1 <- rename(korpop1,
household = 가구_계_가구)
# 그래프로 만들기
ggplot(data = korpop1, aes(x = reorder(name, -household), y = household)) +
geom_col()
####### 지역별 가구당 평균 구성인원 수
korpop1 <- korpop1 %>%
mutate(mean_pph = pop / household)
ggplot(data = korpop1, aes(x = reorder(name, -mean_pph), y = mean_pph)) +
geom_col() +
ylim(0, 5)
####### 지역별 남녀 성비
korpop1_sex_ratio <- korpop1 %>%
group_by(name) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
####### 지역별 남녀 성비
korpop1_sex_ratio <- korpop1 %>%
group_by(name) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
ggplot(data = korpop1, aes(x = reorder(name, -mean_pph), y = mean_pph)) +
geom_col() +
ylim(0, 5)
####### 지역별 남녀 성비
korpop1_sex_ratio <- korpop1 %>%
group_by(name) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
korpop1
####### 지역별 남녀 성비
korpop1<- rename(korpop1,
male = 남자_명,
female = 여자_명)
korpop1_sex_ratio <- korpop1 %>%
group_by(name) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1_sex_ratio,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
korpop1_sex_ratio,
korpop1_sex_ratio
####### 지역별 남녀 성비
korpop1_sex_ratio <- korpop1 %>%
group_by(name) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1_sex_ratio,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
korpop1
korpop1_sex_ratio <- korpop1 %>%
group_by(name, code) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
####### 지역별 남녀 성비
korpop1<- rename(korpop1,
male = 남자_명,
female = 여자_명)
korpop1_sex_ratio <- korpop1 %>%
group_by(name, code) %>%
summarise(sex_ratio = male / female * 100) %>%
mutate(code = korpop1$code)
rlang::last_error()
korpop1_sex_ratio <- korpop1 %>%
group_by(name, code) %>%
summarise(sex_ratio = male / female * 100)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1_sex_ratio,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 지역별 남녀 성비
korpop1_sex_ratio <- korpop1 %>%
group_by(name, code) %>%
summarise(sex_ratio = male / female * 100)
ggChoropleth(data = korpop1_sex_ratio,
aes(fill = sex_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 지역별 외국인 비율
korpop1 <- rename(korpop1,
foreigner = 외국인_계_명)
korpop1$foreigner <- as.numeric(korpop1$foreigner)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 100)
korpop1_foreigner <- korpop1 %>%
select(name, code, foreigner_ratio, pop, foreigner)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
korpop1_foreigner <- korpop1 %>%
select(name, code, foreigner_ratio, pop, foreigner)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
korpop1_foreigner
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
korpop1_foreigner
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 1000)
korpop1_foreigner <- korpop1 %>%
select(name, code, foreigner_ratio, pop, foreigner)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
korpop1_foreigner
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 10000)
korpop1_foreigner <- korpop1 %>%
select(name, code, foreigner_ratio, pop, foreigner)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
korpop1_foreigner
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
korpop1_foreigner
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
korpop1 <- korpop1 %>%
mutate(foreigner_ratio = foreigner / pop * 1000)
korpop1_foreigner <- korpop1 %>%
select(name, code, foreigner_ratio, pop, foreigner)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.5)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 0.8)
korpop1_foreigner
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 4)
korpop1_foreigner
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
####### 결핵 환자 수
# 지역별 결핵 환자 수
new_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(name) %>%
summarise(sum_NewPts = sum(NewPts))
new_tbc
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
# 연도별 결핵 환자 수
new2_tbc <- tbc %>%
filter(!is.na(NewPts)) %>%
group_by(year) %>%
summarise(sum_NewPts = sum(NewPts))
new2_tbc
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
####### 조인 사용해보기
korpop1
# 15년도의 지역별 결핵환자
tbc_code <- tbc %>%
filter(!is.na(NewPts) & year == 2015) %>%
group_by(code,name) %>%
summarise(NewPts_15 = sum(NewPts)) %>%
arrange(code)
tbc_code
tbc_code$code <- as.character(tbc_code$code)
tbc_code
# left_join
korpop1 <- left_join(korpop1, tbc_code, by = 'code')
korpop1
## 지역별 가구당 결핵환자 발생 확률
korpop1 <- korpop1 %>%
mutate(household_NewPts = NewPts_15 / household * 100)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggplot(data = korpop1, aes(x = reorder(name, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
korpop1 <- rename(korpop1,
pop = 총인구_명,
name = 행정구역별_읍면동)
korpop1
korpop1
ggplot(data = korpop1, aes(x = name, y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggplot(data = korpop1, aes(x = name.x, y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggplot(data = korpop1, aes(x = reorder(name.x, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
ggChoropleth(data = korpop1,
aes(fill = household_NewPts,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggplot(data = korpop1, aes(x = reorder(name.x, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
str(changeCode(korpop1))
str(changeCode(tbc))
ggplot(data = korpop1, aes(x = reorder(name, -pop), y = pop)) +
geom_col()
ggplot(data = korpop1, aes(x = reorder(name.x, -pop), y = pop)) +
geom_col()
# 그래프로 만들기
ggplot(data = korpop1, aes(x = reorder(name.x, -household), y = household)) +
geom_col()
ggplot(data = korpop1, aes(x = reorder(name.x, -mean_pph), y = mean_pph)) +
geom_col() +
ylim(0, 5)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name.x, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggChoropleth(data = korpop1_sex_ratio,
aes(fill = sex_ratio,
map_id = code,
tooltip = name.x),
map = kormap1,
interactive = T)
ggplot(data = korpop1_sex_ratio, aes(x = reorder(name, -sex_ratio), y = sex_ratio)) +
geom_col() +
ylim(0, 150)
ggplot(data = korpop1_foreigner, aes(x = reorder(name, -foreigner_ratio), y = foreigner_ratio)) +
geom_col() +
ylim(0, 4)
ggChoropleth(data = korpop1_foreigner,
aes(fill = foreigner_ratio,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggplot(data = new_tbc, aes(x = reorder(name, -sum_NewPts), y = sum_NewPts)) +
geom_col()
ggplot(data = new2_tbc, aes(x = year, y = sum_NewPts, group = 1)) +
geom_line()
ggplot(data = korpop1, aes(x = reorder(name.x, -household_NewPts), y = household_NewPts)) +
geom_col() +
ylim(0, 0.4)
